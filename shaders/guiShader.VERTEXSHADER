 #version 420 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec4 vertexColor;
layout(location = 2) in vec3 normal;
layout(location = 3) in vec2 vertexUV;

// Output data ; will be interpolated for each fragment.
out vec4 fragColor;
out vec2 fragUV;

// Values that stay constant for the whole mesh.
uniform mat4 Model;
uniform mat4 View;
uniform mat4 Projection;

void main(){
	gl_Position = Projection * Model * vec4(vertexPosition_modelspace, 1);
	fragColor = vertexColor;
	fragUV = vertexUV;
}

